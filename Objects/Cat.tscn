[gd_scene load_steps=7 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://Objects/Balloons.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export var speed = 3
export var max_hp = 5

var min_w
var max_w
var min_h
var max_h

var hp : int
var _setup = false
var invicible_time = 0

signal died()
signal change_invincible(isInvincible)

func _ready():
	call_deferred(\"setup\")
	
func setup():
	hp = max_hp
	var p = get_parent()
	min_w = p.get_node(\"Min_W\").position.x
	min_h = p.get_node(\"Min_H\").position.y
	max_w = p.get_node(\"Max_W\").position.x
	max_h = p.get_node(\"Max_H\").position.y
	_setup = true
	_set_balloons(hp)

func _physics_process(delta):
	if _setup:
		kb_process(delta)
		ivincible_time_sub()

func kb_process(delta):
	if Input.is_action_pressed(\"ui_left\"):
		move_and_collide(Vector2(-speed, 0))
		protect_positions()
	elif Input.is_action_pressed(\"ui_right\"):
		move_and_collide(Vector2(speed, 0))
		protect_positions()
	if Input.is_action_pressed(\"ui_up\"):
		move_and_collide(Vector2(0, -speed))
		protect_positions()
	elif Input.is_action_pressed(\"ui_down\"):
		move_and_collide(Vector2(0, speed))
		protect_positions()
	# Delete this
	if Input.is_action_just_pressed(\"ui_accept\"):
		make_invincible()
	
func protect_positions():
	if position.x > max_w:
		position.x = max_w
	if position.x < min_w:
		position.x = min_w
	if position.y > max_h:
		position.y = max_h
	if position.y < min_h:
		position.y = min_h
	
func damage(n):
	if invicible_time > 0:
		return
	hp -= n
	if hp < 1:
		destruct()
	_set_balloons(hp)

func destruct():
	emit_signal(\"died\")
	# Play some animation
	queue_free()

func set_max_hp(hp):
	self.max_hp = hp
	self.hp = hp
	_set_balloons(hp)

func ivincible_time_sub():
	if (invicible_time > 0):
		invicible_time -= 1
		if (invicible_time < 1):
			emit_signal(\"change_invincible\", false)

func make_invincible():
	if (invicible_time < 1):
		emit_signal(\"change_invincible\", true)
		invicible_time = 100

func is_invincible():
	return invicible_time > 0

func _set_balloons(n):
	$g/Balloons.set_count(n)
"

[sub_resource type="RectangleShape2D" id=2]

[sub_resource type="Animation" id=3]
resource_name = "Invincible"
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("g:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="GDScript" id=4]
script/source = "extends AnimationPlayer

var cat

func _ready():
	call_deferred(\"setup\")

func setup():
	cat = get_parent()
	cat.connect(\"change_invincible\", self, \"invinc\")
	
func invinc(isInvincible):
	if isInvincible:
		play(\"Invincible\")
	else:
		stop()
		cat.get_node(\"g\").visible = true
"

[node name="Cat" type="KinematicBody2D"]
script = SubResource( 1 )

[node name="shape" type="CollisionShape2D" parent="."]
scale = Vector2( 1.81551, 3.40002 )
shape = SubResource( 2 )

[node name="g" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="g"]
scale = Vector2( 0.526719, 1.01757 )
texture = ExtResource( 1 )

[node name="Balloons" parent="g" instance=ExtResource( 2 )]
position = Vector2( 2.99365, -67.6567 )

[node name="ani" type="AnimationPlayer" parent="."]
anims/Invincible = SubResource( 3 )
script = SubResource( 4 )
