[gd_scene load_steps=13 format=2]

[ext_resource path="res://Objects/Cat.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/Fonts/zorque.ttf" type="DynamicFontData" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var _go = false
export var speed = 5
export var _start_automatically = false
export var _cat_hp = 3
export var _cat_speed = 3
export var _score = 0
signal died()

func _ready():
	call_deferred(\"setup\")
	
func setup():
	$camera.current = true
	if _start_automatically:
		start()
	$cat.set_max_hp(_cat_hp)
	$cat.speed = _cat_speed
	$cat.connect(\"died\", self, \"_cat_died\")
	G.score_update()

func start():
	_go = true

func stop():
	_go = false

func _physics_process(delta):
	if _go:
		position.x += speed

func _cat_died():
	emit_signal(\"died\")
	stop()

func get_spawn_pos():
	return get_node(\"Spawner\").global_position

func spawn(ypos, node: Node2D):
	var spawn_pos = get_spawn_pos() + Vector2(0, ypos)
	node.position = spawn_pos
	get_parent().add_child(node)

func change_sling(sling: Node2D):
	$cat.change_sling(sling)

func shake_camera():
	$clayer/Anim.play(\"Camera_shake\")
"

[sub_resource type="DynamicFont" id=2]
size = 64
font_data = ExtResource( 2 )

[sub_resource type="GDScript" id=3]
script/source = "extends Label

func _ready():
	G.connect(\"score_updated\", self, \"on_score\")

func on_score(n):
	text = str(n)
	get_parent().get_node(\"Anim\").play(\"Score_Update\")
"

[sub_resource type="Animation" id=4]
length = 0.5
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("../camera:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.34, 0.4, 0.45, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 1, 0 ), Vector2( -1, 0 ), Vector2( 0, 1 ), Vector2( 0, -1 ), Vector2( 0, 0 ), Vector2( 1, 1 ), Vector2( 0, 1 ), Vector2( 1, -1 ), Vector2( 2, 0 ), Vector2( -3, 0 ) ]
}

[sub_resource type="Animation" id=5]
length = 0.1
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.02, 0.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.5, 1.5 ), Vector2( 1, 1 ) ]
}

[sub_resource type="GDScript" id=6]
script/source = "extends Area2D

func _ready():
	connect(\"body_shape_entered\", self, \"enter\")

func enter(body_id, body, body_shape, area_shape):
	if body.has_method(\"destruct\"):
		body.destruct()
	else:
		body.queue_free()
"

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 69.89, 67.4558 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 113.549, 30.6906 )

[sub_resource type="GDScript" id=9]
script/source = "extends Area2D

func _ready():
	call_deferred(\"setup\")
	
func setup():
	connect(\"area_shape_entered\", self, \"_read\")

func _read(body_id, body : Node2D, shape_id, shape):
	if body.has_node(\"scenario\") and body.has_method(\"scenario\"):
		body.call(\"scenario\", get_parent()) # Call scenario(leve_holder)
		body.queue_free()
"

[sub_resource type="RectangleShape2D" id=10]

[node name="LevelHolder" type="Node2D"]
position = Vector2( 401.582, 198.015 )
script = SubResource( 1 )
speed = 3
_start_automatically = true

[node name="clayer" type="CanvasLayer" parent="."]

[node name="score" type="Label" parent="clayer"]
modulate = Color( 0.101961, 0.152941, 0.878431, 1 )
margin_left = 27.0927
margin_top = 6.50859
margin_right = 239.093
margin_bottom = 83.5086
rect_scale = Vector2( 0.438387, 0.53318 )
custom_fonts/font = SubResource( 2 )
text = "Score"
script = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Anim" type="AnimationPlayer" parent="clayer"]
anims/Camera_shake = SubResource( 4 )
anims/Score_Update = SubResource( 5 )

[node name="camera" type="Camera2D" parent="."]
scale = Vector2( 4.3337, 3.38059 )

[node name="cat" parent="." instance=ExtResource( 1 )]
position = Vector2( -125.003, -1.13315 )

[node name="Min_W" type="Node2D" parent="."]
position = Vector2( -175.283, -7.68173 )

[node name="Min_H" type="Node2D" parent="."]
position = Vector2( -179.473, -121.511 )

[node name="Max_W" type="Node2D" parent="."]
position = Vector2( -74.0239, -7.68173 )

[node name="Max_H" type="Node2D" parent="."]
position = Vector2( -171.791, 67.7385 )

[node name="Destructor" type="Area2D" parent="."]
position = Vector2( -275.333, 4.58447 )
scale = Vector2( 2.58016, 4.83407 )
script = SubResource( 6 )

[node name="shape" type="CollisionShape2D" parent="Destructor"]
position = Vector2( -89.2414, -31.2726 )
shape = SubResource( 7 )

[node name="shape2" type="CollisionShape2D" parent="Destructor"]
position = Vector2( 81.8979, 68.1297 )
shape = SubResource( 8 )

[node name="Spawner" type="Node2D" parent="."]
position = Vector2( 342.54, -115.408 )

[node name="LevelReader" type="Area2D" parent="."]
position = Vector2( 257.681, 82.1414 )
script = SubResource( 9 )

[node name="shape" type="CollisionShape2D" parent="LevelReader"]
scale = Vector2( 5.4139, 6.85515 )
shape = SubResource( 10 )
