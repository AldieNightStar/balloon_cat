[gd_scene load_steps=8 format=2]

[ext_resource path="res://assets/Enemy/raven1.png" type="Texture" id=1]
[ext_resource path="res://assets/Enemy/raven2.png" type="Texture" id=2]
[ext_resource path="res://assets/Enemy/raven4.png" type="Texture" id=3]
[ext_resource path="res://assets/Enemy/raven3.png" type="Texture" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export var max_pos = 400
var side = 0.5
var hp = 1
var speed = 0.5
var dead = false
var min_pos_y
var max_pos_y
var collis
export var diapazone : int = 50
export var y_velocity : int = 1

func _ready():
	collis = get_node(\"Raven_Colis\")
	min_pos_y = global_position.y - diapazone
	max_pos_y = global_position.y + diapazone
	fly()

func _process(delta):
	var c = move_and_collide(Vector2(-speed, 0))
	if c && !dead:
		_attack(c.collider)
	if dead:
		position.y += speed * 10
		rotation += 1
	_do_velocity()

func _do_velocity():
	move_and_collide(Vector2(0, y_velocity))
	if global_position.y > max_pos_y or global_position.y < min_pos_y:
		y_velocity *= -1

func fly():
	$AnimatedSprite.play(\"fly\")

func _attack(body):
	print(body.name)
	if body.has_method(\"damage\"):
		body.damage(1)
		self.add_collision_exception_with(body)

func destruct():

	queue_free()

func damage(n):
	hp -= n
	if hp <= 0:
		$Raven_Colis.disabled = true
		dead = true
		collis.disabled = true

"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 17.0363, 14.1431 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 1 ), ExtResource( 3 ), ExtResource( 2 ), ExtResource( 4 ) ],
"loop": true,
"name": "fly",
"speed": 2.0
} ]

[node name="Raven_kinema" type="KinematicBody2D"]
script = SubResource( 1 )

[node name="Raven_Colis" type="CollisionShape2D" parent="."]
position = Vector2( 1.4851, 2.05888 )
scale = Vector2( 0.924356, 0.871277 )
shape = SubResource( 2 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 0.970825, 1.58549 )
frames = SubResource( 3 )
animation = "fly"
