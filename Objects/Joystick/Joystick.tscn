[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/Joystick/circle_small.png" type="Texture" id=1]
[ext_resource path="res://assets/Joystick/circle_big.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var stick_speed = 0
var stick_angle = 0
var stick_vector = Vector2()

export var automate_ui_buttons = false
"

[sub_resource type="GDScript" id=2]
script/source = "extends Sprite

const RADIUS = 120
const SMALL_RADIUS = 45
const AUTO_RADIUS = .25

var stick_pos
var evt_index = -1
var automate_ui_buttons

signal on_change(vector2)

func _ready():
	stick_pos = get_parent().global_position
	automate_ui_buttons = get_parent().automate_ui_buttons
	if automate_ui_buttons:
		connect(\"on_change\", self, \"__process_input\")

func _input(event):
	if event is InputEventScreenTouch:
		if event.is_pressed():
			$anim.play(\"show\")
			if stick_pos.distance_to(event.position) < RADIUS:
				evt_index = event.index
		elif evt_index != -1:
			if evt_index == event.index:
				var parent = get_parent()
				$anim.play(\"hide\")
				evt_index = -1
				parent.stick_speed = 0
				parent.stick_vector = Vector2.ZERO
				parent.stick_angle = 0
				$small.position = Vector2.ZERO
				emit_signal(\"on_change\", Vector2.ZERO)
	if evt_index != -1 and event is InputEventScreenDrag:
		var dist = stick_pos.distance_to(event.position)
		var vect = (event.position - stick_pos).normalized()
		if dist+SMALL_RADIUS > RADIUS:
			dist = RADIUS-SMALL_RADIUS
		var parent = get_parent()
		parent.stick_speed = dist
		parent.stick_vector = vect
		parent.stick_angle = event.position.angle_to_point(stick_pos)
		$small.position = vect * dist
		emit_signal(\"on_change\", vect)

func __process_input(v):
	# Horizontal
	if v.x > AUTO_RADIUS: Input.action_press(\"ui_right\")
	else: Input.action_release(\"ui_right\")
	if v.x < -AUTO_RADIUS: Input.action_press(\"ui_left\")
	else: Input.action_release(\"ui_left\")
	# Vertical
	if v.y > AUTO_RADIUS: Input.action_press(\"ui_down\")
	else: Input.action_release(\"ui_down\")
	if v.y < -AUTO_RADIUS: Input.action_press(\"ui_up\")
	else: Input.action_release(\"ui_up\")
"

[sub_resource type="Animation" id=3]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.215686 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=4]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.215686 ) ]
}

[node name="Joystick" type="Node2D"]
script = SubResource( 1 )

[node name="big" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.215686 )
scale = Vector2( 0.7, 0.7 )
texture = ExtResource( 2 )
script = SubResource( 2 )

[node name="small" type="Sprite" parent="big"]
scale = Vector2( 0.721549, 0.721549 )
texture = ExtResource( 1 )

[node name="anim" type="AnimationPlayer" parent="big"]
anims/hide = SubResource( 3 )
anims/show = SubResource( 4 )
